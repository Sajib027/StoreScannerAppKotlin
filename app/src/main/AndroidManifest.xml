<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.kodakalaris.advisor">

    <!-- Permissions required for this application -->
    <uses-feature android:name="android.hardware.camera" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>

    <!-- Properties inside application tag applicable for the whole application -->
    <application
        android:name=".application.AppController"
        android:allowBackup="false"
        tools:replace="android:icon"
        android:label="@string/app_name"
        android:icon="@mipmap/kmaa_app_icon"
        android:supportsRtl="true"
        android:screenOrientation="portrait"
        android:theme="@style/AppTheme.NoActionBar"
        android:requestLegacyExternalStorage="true"
        android:usesCleartextTraffic="true">

        <!-- Launch activity which is application's launcher screen -->
        <activity android:name=".activities.LaunchActivity"
            android:launchMode="singleTask"
            android:screenOrientation="portrait"
            tools:ignore="LockedOrientationActivity">
            <!-- MAIN and LAUNCHER intent filter required to launch that specified activity to be the very first screen of the application -->
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- Change Store activity is the registration screen -->
        <activity android:name=".activities.ChangeStoreActivity"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.NoActionBar"
            tools:ignore="LockedOrientationActivity"/>

        <!-- Welcome Screen activity which is visible whenever user open the app after registration -->
        <activity android:name=".activities.WelcomeScreenActivity"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.NoActionBar"
            tools:ignore="LockedOrientationActivity"/>

        <!-- QrCode Scanner activity shows the scanner -->
        <activity android:name=".activities.QrCodeScannerActivity"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.NoActionBar"
            tools:ignore="LockedOrientationActivity" />

        <!-- Home activity is the main screen where whole functionality shows -->
        <activity
            android:name=".activities.HomeActivity"
            android:screenOrientation="portrait"
            android:launchMode="singleTask"
            android:theme="@style/AppTheme.NoActionBar"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
            android:windowSoftInputMode="adjustNothing"
            tools:ignore="LockedOrientationActivity" />

        <!-- InprogressOrCompleted activity screen shows the list of the events occupy by other users of the same kiosk -->
        <activity
            android:name=".activities.InprogressOrCompletedActivity"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.NoActionBar"
            tools:ignore="LockedOrientationActivity" />

        <!-- Backdoor activity is the hidden screen where admin can change the application configurations -->
        <activity
            android:name=".activities.BackdoorActivity"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="adjustResize"
            android:theme="@style/AppTheme.NoActionBar"
            tools:ignore="LockedOrientationActivity" />

        <!-- Service for handling background firebase notifications -->
        <service
            android:name=".firebase.PushMessagingService"
            tools:ignore="ExportedService">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <!-- Set custom default icon. This is used when no icon is set for incoming notification messages.-->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_icon"
            android:resource="@drawable/ic_notification"/>

        <!-- Set custom default channel id.-->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_channel_id"
            android:value="@string/default_notification_channel_id" />

    </application>

</manifest>